/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.resumebuilder;

/**
 *
 * @author EdenChung
 */

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.rendering.PDFRenderer;



public class PDFViewerPanel extends javax.swing.JPanel {

    /**
     * Creates new form PDFViewerPanel
     */
    public PDFViewerPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        jLabel1.setText("Test");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(jLabel1)
                .addContainerGap(209, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(154, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(129, 129, 129))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    public PDFViewerPanel(File file) throws IOException {
        document = PDDocument.load(file);
        renderer = new PDFRenderer(document);
        currentPage = 0;
    }
    
    @Override
    public Dimension getPreferredSize() {
        PDPage page = document.getPage(currentPage);
        return new Dimension((int) page.getMediaBox().getWidth(), (int) page.getMediaBox().getHeight());
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        try {
            PDPage page = document.getPage(currentPage);
            BufferedImage image = renderer.renderImageWithDPI(currentPage, 300);
            int scaledWidth = image.getWidth() / 4;
            int scaledHeight = image.getHeight() / 4;
            g.drawImage(image, 0, 0, scaledWidth, scaledHeight, null);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    private PDDocument document;
    private PDFRenderer renderer;
    private int currentPage;
}
